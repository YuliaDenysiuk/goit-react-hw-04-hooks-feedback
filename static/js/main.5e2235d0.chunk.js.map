{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Notification/Notification.module.css","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","components/Section/Section.js","App.js","index.js"],"names":["module","exports","Statistics","good","neutral","bad","total","positivePercentage","className","s","option","percent","FeedbackOptions","options","onLeaveFeedback","map","type","button","onClick","Notification","message","Section","title","children","section","App","state","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Object","keys","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2IACAA,EAAOC,QAAU,CAAC,OAAS,2BAA2B,MAAQ,0BAA0B,QAAU,8B,kBCAlGD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,oBCA7DD,EAAOC,QAAU,CAAC,OAAS,kC,gBCA3BD,EAAOC,QAAU,CAAC,QAAU,gC,sMCsBbC,MApBf,YAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC/C,OACE,qCACE,oBAAGC,UAAWC,IAAEC,OAAhB,mBAA+BP,KAC/B,oBAAGK,UAAWC,IAAEC,OAAhB,sBAAkCN,KAClC,oBAAGI,UAAWC,IAAEC,OAAhB,kBAA8BL,KAC9B,oBAAGG,UAAWC,IAAEH,MAAhB,oBAA+BA,KAC/B,oBAAGE,UAAWC,IAAEE,QAAhB,gCAA6CJ,EAA7C,W,iBCWSK,MAlBf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAClC,OAAOD,EAAQE,KAAI,SAAAL,GAAM,OACvB,wBACEM,KAAK,SACLR,UAAWC,IAAEQ,OAEbC,QAAS,kBAAMJ,EAAgBJ,IAJjC,SAMGA,GAHIA,O,iBCGIS,MARf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OAAO,mBAAGZ,UAAWC,IAAEW,QAAhB,SAA0BA,K,gBCapBC,MAdf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,0BAASf,UAAWC,IAAEe,QAAtB,UACE,oBAAIhB,UAAWC,IAAEa,MAAjB,SAAyBA,IACxBC,MCDDE,E,4MACJC,MAAQ,CACNvB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPS,gBAAkB,SAAAJ,GAChB,EAAKiB,UAAS,SAAAC,GAAS,sBACpBlB,EAASkB,EAAUlB,GAAU,O,EAIlCmB,mBAAqB,WACnB,MAA+B,EAAKH,MACpC,OADA,EAAQvB,KAAR,EAAcC,QAAd,EAAuBC,K,EAIzByB,gCAAkC,WAChC,IAAQ3B,EAAS,EAAKuB,MAAdvB,KACA0B,EAAR,eAAQA,mBACR,OAAO1B,EAAO,EAAI4B,KAAKC,MAAO7B,EAAO0B,IAAwB,KAAO,G,4CAGtE,WACE,MAA+BI,KAAKP,MAA5BvB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAErBS,EAGEmB,KAHFnB,gBACAe,EAEEI,KAFFJ,mBACAC,EACEG,KADFH,gCAGF,OACE,qCACE,cAAC,EAAD,CAASR,MAAM,wBAAf,SACE,cAAC,EAAD,CACET,QAASqB,OAAOC,KAAKF,KAAKP,OAC1BZ,gBAAiBA,MAIrB,cAAC,EAAD,CAASQ,MAAM,aAAf,SACGO,IACC,cAAC,EAAD,CACE1B,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOuB,IACPtB,mBAAoBuB,MAGtB,cAAC,EAAD,CAAcV,QAAQ,+B,GAnDhBgB,aA2DHX,IC5DfY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.5e2235d0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"option\":\"Statistics_option__bFSIn\",\"total\":\"Statistics_total__3tXmD\",\"percent\":\"Statistics_percent__3z7wR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__ZB-Sh\",\"title\":\"Section_title__1HL7g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__2qitd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__2-Q-y\"};","import s from './Statistics.module.css';\nimport PropTypes from 'prop-types';\n\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\n  return (\n    <>\n      <p className={s.option}>Good: {good}</p>\n      <p className={s.option}>Natural: {neutral}</p>\n      <p className={s.option}>Bad: {bad}</p>\n      <p className={s.total}>Total: {total}</p>\n      <p className={s.percent}>Positive feedback: {positivePercentage}%</p>\n    </>\n  );\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n  total: PropTypes.number,\n  positivePercentage: PropTypes.number,\n};\n\nexport default Statistics;\n","import s from './FeedbackOptions.module.css';\nimport PropTypes from 'prop-types';\n\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\n  return options.map(option => (\n    <button\n      type=\"button\"\n      className={s.button}\n      key={option}\n      onClick={() => onLeaveFeedback(option)}\n    >\n      {option}\n    </button>\n  ));\n}\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string),\n  onLeaveFeedback: PropTypes.func,\n};\n\nexport default FeedbackOptions;\n","import s from './Notification.module.css';\nimport PropTypes from 'prop-types';\n\nfunction Notification({ message }) {\n  return <p className={s.message}>{message}</p>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n\nexport default Notification;\n","import s from './Section.module.css';\nimport PropTypes from 'prop-types';\n\nfunction Section({ title, children }) {\n  return (\n    <section className={s.section}>\n      <h2 className={s.title}>{title}</h2>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Statistics from './components/Statistics/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Notification from './components/Notification/Notification';\nimport Section from './components/Section/Section';\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  onLeaveFeedback = option => {\n    this.setState(prevState => ({\n      [option]: prevState[option] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    const { countTotalFeedback } = this;\n    return good > 0 ? Math.round((good / countTotalFeedback()) * 100) : 0;\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const {\n      onLeaveFeedback,\n      countTotalFeedback,\n      countPositiveFeedbackPercentage,\n    } = this;\n\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={Object.keys(this.state)}\n            onLeaveFeedback={onLeaveFeedback}\n          />\n        </Section>\n\n        <Section title=\"Statistics\">\n          {countTotalFeedback() ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={countTotalFeedback()}\n              positivePercentage={countPositiveFeedbackPercentage()}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}